// Base definitions and shared definitions


// SASS values

$mobile-max-width: 480px;
$tablet-max-width: 768px;

$color-bg: #101010;

$color-listitem: #282828;
$color-listitem-over: #383838;
$color-listitem-selected: #383838;
$color-listitem-selected-over: #484848;
$color-listitem-less: #1c1c1c;

$color-text-less: #999;
$color-text: #ccc;

$color-accent: #ff2200;

$color-button-bg: rgba(255,255,255,0.16); // 0x28 over 256
$color-button-over: rgba(255,255,255,0.22); // 0x38 over 256

$space-unit: 16px;
$space-unit-mobile: 12px;

$font-size-normal: 16px;
$font-size-normal-mobile: 12px;

$font-size-smaller: 12px;
$font-size-smaller-mobile: 10px;

$icon-button-side: 36px;

$z-subview-max: 9999;

@mixin mobile {
  @media (max-width: $mobile-max-width)  { @content; }
}
@mixin tablet {
  @media (max-width: $tablet-max-width)  { @content; }
}

@mixin userSelect($val) {
  -moz-user-select: $val;
  -webkit-user-select: $val;
  -ms-user-select:$val;
  user-select:$val;
  -o-user-select:$val;
}

@mixin userDrag($val) {
  user-drag: $val;
  -webkit-user-drag: $val;
}

@mixin disabledIconButton {
  pointer-events:none;
  &:before {
    opacity:0.5;
  }
}

// ---

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	
	font-family: 'Noto Sans TC', serif;
	font-size: $font-size-normal;
	color: $color-text;

  // Mobile Chrome: Prevent light blue pressed state on tappable things
  -webkit-tap-highlight-color: transparent;

  // Must be overridden explicitly as needed
  @include userSelect(none);
  @include userDrag(none);

  :focus { outline: 1px dotted $color-text; }

  @include mobile {
    font-size:$font-size-normal-mobile;
  }
}

body {
	min-width: 320px;
  display:flex;
  flex-direction:column;
	overflow-x: hidden;
  overflow-y: hidden;
	background-color: $color-bg;
}

ul {
  list-style: none;
  margin-left: 0;
  padding-left: 0;
}
li:before {
  content: "\200B";
  position: absolute;
}

.noTransition {
  -webkit-transition: none !important;
  -moz-transition: none !important;
  -o-transition: none !important;
  transition: none !important;
}

.colorAccent {
  color: $color-accent;
}
.colorTextLess {
  color: $color-text-less;
}

.fontSizeSmaller {
  font-size:$font-size-smaller;
  @include mobile {
    font-size:$font-size-smaller-mobile;
  }
}

// A child of #mainView, covers the entire area of mainView
.subview {
	position:absolute; 
	width:100%;
	height:100%;
  overflow-y: scroll;
  padding:$space-unit;
  background-color:$color-bg;
  &:focus {
    outline: none
  }
  @include mobile {
    padding:$space-unit-mobile;
  }
}

// Title text at the top of a subview
// A button icon is typically place on the right
.viewTitle {
  font-size: 16px;
  font-weight: bold;
  line-height: $icon-button-side;
}

// Standard icon button
// Uses pseudo element for image so its opacity can be controlled independently
.iconButton {
  display: inline-block;
  width: $icon-button-side;
  height: $icon-button-side;
  cursor:pointer;
  background-color: $color-button-bg;
  position: relative;

  // Background image in pseudo-element
  &:before {
    content: ' ';
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-repeat: no-repeat;
    background-position: center;
    background-size: 24px 24px;
  }
  &:hover {
    background-color: $color-button-over;
  }
}
.iconButton.isDisabled {
  @include disabledIconButton;
}

.moreButton {
  &:before {
    background-image: url('./../img/icons/more_horiz_white_24dp.svg');
  }
}

.closeButton {
  background-color:transparent;
  &:before {
    background-image: url('./../img/icons/close_white_24dp.svg');
  }
}

.textButton {
	display: inline-block;
  border-radius: 6px;
	vertical-align: top;
	height: 36px;
  padding-left:12px;
  padding-right:12px;
  font-size:13px;
  font-weight: bold;
  text-transform: uppercase;
	line-height:36px;
  background-color: $color-button-bg;
  cursor:pointer;

  &:hover {
    background-color: $color-button-over;
  }
}
.textButton.isDisabled {
  pointer-events:none;
  color: #888;
}

.contextMenu {
  position:absolute; // gets positioned programmatically
  z-index:10001;
  visibility:hidden;
  top:0;
  background: $color-bg;
  border:1px solid $color-listitem;
  .contextItem {
    padding-left:16px;
    padding-right:16px;
    padding-top:8px;
    padding-bottom:8px;
    cursor:pointer;
    &:hover {
      background-color: $color-listitem;
    }
  }
}

.dropdown {
  height:36px;
  position:relative;
  width:150px; // must have hardcoded width; override this
  visibility: hidden;

  .dropdownTitle {
    height: 36px;
    padding-left:12px;
    padding-right:12px;
    color:$color-text-less;
    font-size:13px;
    font-weight: bold;
    text-transform: uppercase;
    line-height:36px;
    background-color:$color-listitem;
  }
  .dropdownItems {
    position:absolute;
    z-index:10001;
    left:0;
    top:36px;
    background:$color-listitem;

    .dropdownItem {
      width:150px;
      line-height: 36px;
      padding:0 16px 0 16px;
      cursor: pointer;
      &:hover {
        background-color: $color-listitem-over;
      }
      &.isSelected {
        background-color:$color-listitem-selected;
        cursor:default;
      }
    }
  }
}
